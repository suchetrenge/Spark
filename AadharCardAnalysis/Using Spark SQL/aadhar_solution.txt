Command to import data as DataFrame:

val adf = spark.read.csv("/home/suchetrenge/mydata/scala_spark_data_jars/data/aahdarcard/aadhaar_data.csv")

For creating Temp view

adf.createOrReplaceTempView("aadhar")

---------------------------------------------------------------------

KPI-1

spark.sql("select * from (select *,row_number() over (partition by _c2 order by _c9 desc) as temp from aadhar) where temp<=25").drop("temp").show(100)

---------------------------------------------------------------------

KPI-2

1. 
spark.sql("select _c1,count(*) from aadhar group by _c1").show(100)

2. 
states count-
spark.sql("select count( distinct _c3) from aadhar ").show()

dist and sub-dist - 
spark.sql("select _c3,count( distinct _c4) as district , count (distinct _c5) as subdist from aadhar group by _c3").show()

district count state wise -
spark.sql("select _c3 as state,count( distinct _c4) as district from aadhar group by _c3").show()

sub-dist count distinct wise
spark.sql("select _c3 as state,_c4 as district,count( distinct _c5) as subdistrict from aadhar group by _c3,_c4").show()


3. 
Female count - 
spark.sql("select _c3,count(_c7) from aadhar where _c7 = 'F' group by _c3 ").show(38)
 
Male count - 
spark.sql("select _c3,count(_c7) from aadhar where _c7 = 'M' group by _c3 ").show(38) 

4. 
spark.sql("select _c3,_c2 from aadhar group by _c3,_c2").show(100)

---------------------------------------------------------------------

KPI-3

1. Top 3 states by aadhar gen
spark.sql("select _c3, sum(_c9) from aadhar group by _c3 order by sum(_c9) desc limit 3").show()

2. Top 3 Private agen by aadhar gen
spark.sql("select _c2, sum(_c9) from aadhar group by _c2 order by sum(_c9) desc limit 3").show()

3. 
MobileProvided - 
spark.sql("select count(*) as MobileProvided from aadhar where _c11 > 0 ").show()

EmailProvided - 
rk.sql("select count(*) as EmailProvided from aadhar where _c12 > 0 ").show()

4. Top 3 Dist by enrollement
spark.sql("select _c4, sum (_c9 + _c10) as enrolment from aadhar group by _c4 order by sum(_c9 + _c10) desc limit 3").show()

5. Aadhar generated by each states
spark.sql("select _c3, sum (_c9 + _c10) as enrolment from aadhar group by _c3 order by sum(_c9 + _c10)").show(38)

---------------------------------------------------------------------

KPI-4

1. 
spark.sql("select _c8, count(*), count(*) * 100.0 / (select count(*) from aadhar where _c11>0) as analysis from aadhar where _c11 > 0 group by _c8").show()

2.
spark.sql("select distinct _c6 as Pincode from aadhar").show(100)

3.
spark.sql("select _c3,sum(_c10) as rejected from aadhar where _c10 > 0 and (_c3 in ('Maharashtra','Uttar Pradesh')) group by _c3").show()

---------------------------------------------------------------------

KPI-5
1. 
spark.sql("select _c3,(sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'M')) as Percentage from aadhar where _c7 = 'M' group by _c3 order by (sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'M')) desc limit 3").show()

Results in states (Maharashtra,Andhra Pradesh,Uttar Pradesh)


2. Top 3 districts from the above states
spark.sql("select _c4,_c3,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) from aadhar where _c3 in (select _c3 from aadhar where _c7 = 'M' group by _c3 order by (sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'M')) desc limit 3) group by _c4,_c3 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) desc limit 3").show()


From each state-
Maharashtra
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) as Maharashtra from aadhar where _c3 = 'Maharashtra' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) desc limit 3").show()

Andhra Pradesh
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) as AndhraPradesh from aadhar where _c3 = 'Andhra Pradesh' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) desc limit 3").show()

Uttar Pradesh
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) as UttarPradesh from aadhar where _c3 = 'Uttar Pradesh' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'F')) desc limit 3").show()


3.
spark.sql("select _c3,(sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'F')) as Percentage from aadhar where _c7 = 'F' group by _c3 order by (sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'F')) desc limit 3").show()

Results in states (Maharashtra,Andhra Pradesh,Uttar Pradesh)


4. Top 3 districts from the above states
spark.sql("select _c3,_c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) from aadhar where _c3 in (select _c3 as Percentage from aadhar where _c7 = 'F' group by _c3 order by (sum(_c9) * 100.0/(select sum(_c9) from aadhar where _c7 = 'F')) desc limit 3) group by _c3,_c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) desc limit 3").show()

For each state-
Maharashtra
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) as Maharashtra from aadhar where _c3 = 'Maharashtra' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) desc limit 3").show()

For AndhraPradesh
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) as AndhraPradesh from aadhar where _c3 = 'Andhra Pradesh' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) desc limit 3").show()

For UttarPradesh
spark.sql("select _c4,(sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) as UttarPradesh from aadhar where _c3 = 'Uttar Pradesh' group by _c4 order by (sum(_c10) * 100.0/(select sum(_c10) from aadhar where _c7 = 'M')) desc limit 3").show()


5.

spark.sql("select ((sum(case when _c8 <=10 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group0,((sum(case when _c8 > 10 and _c8 <=20 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group1,((sum(case when _c8 > 20 and _c8 <=30 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group2,((sum(case when _c8 > 30 and _c8 <=40 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group3,((sum(case when _c8 > 40 and _c8 <=50 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group4,((sum(case when _c8 > 50 and _c8 <=60 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group5,((sum(case when _c8 > 60 and _c8 <=70 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group6,((sum(case when _c8 > 70 and _c8 <=80 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group7,((sum(case when _c8 > 80 and _c8 <=90 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group8,((sum(case when _c8 > 90 then _c10 else 0 end)) * 100.0 / (select sum(_c9) from aadhar)) group9  from aadhar").show(50)
